datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  name      String?
  password  String
  role      Role    @default(USER)
  posts     Post[]
  products  Product[]
  transactions Transaction[]
  comments  Comment[]
  ratings   Rating[]
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  Int?
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  transactions Transaction[]
  comments    Comment[]
  ratings     Rating[]
  tags        ProductTag[]
}

model Transaction {
  id          Int       @id @default(autoincrement())
  date        DateTime  @default(now())
  quantity    Int
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  status      TransactionStatus @default(PENDING)
}

model Comment {
  id          Int       @id @default(autoincrement())
  content     String
  date        DateTime  @default(now())
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
}

model Rating {
  id          Int       @id @default(autoincrement())
  value       Int
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
}

model Tag {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  products    ProductTag[]
}

model ProductTag {
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  tag         Tag       @relation(fields: [tagId], references: [id])
  tagId       Int

  @@id([productId, tagId])
}

enum Role {
  ADMIN
  USER
}

enum TransactionStatus {
  PENDING
  COMPLETED
  CANCELED
}
